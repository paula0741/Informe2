
package Informe2;

import javax.swing.JOptionPane;

/**
 *
 * @author PAULA LOPEZ
 */
public class GUICResistencias extends javax.swing.JFrame {

    private Menu Cr;
    private double c11 =0;
    private double c12 =0;
    private double c13 =0;
    private double c14 =0;
    private double r =0;
    private double n =100;
    private double resultado1 =0;
    private double resultado2 =0;
    private double concatenar =0;



    
    public GUICResistencias() {
        setLocationRelativeTo(null);
        initComponents();
        Cr = new Menu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Color1 = new javax.swing.JComboBox<>();
        Resistencia = new javax.swing.JButton();
        Color2 = new javax.swing.JComboBox<>();
        Multiplicador = new javax.swing.JComboBox<>();
        Tolerancia = new javax.swing.JComboBox<>();
        Casilla1 = new javax.swing.JLabel();
        MasMenos = new javax.swing.JLabel();
        Casilla2 = new javax.swing.JLabel();
        Return = new javax.swing.JButton();
        Calcular = new javax.swing.JButton();
        ReiniciarF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Color1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "negro","marron", "rojo","naranja", "Amarillo", "verde", "azul", "violeta", "gris", "blanco" }));
        Color1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Color1ItemStateChanged(evt);
            }
        });
        Color1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Color1ActionPerformed(evt);
            }
        });

        Resistencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Informe2/Captura de pantalla (38)_LI.jpg"))); // NOI18N
        Resistencia.setText("jButton1");
        Resistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResistenciaActionPerformed(evt);
            }
        });

        Color2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "negro","marron", "rojo","naranja", "Amarillo", "verde", "azul", "violeta", "gris", "blanco" }));
        Color2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Color2ItemStateChanged(evt);
            }
        });
        Color2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Color2ActionPerformed(evt);
            }
        });

        Multiplicador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "negro","marron", "rojo","naranja", "Amarillo", "verde", "azul", "violeta", "gris", "blanco" }));
        Multiplicador.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                MultiplicadorItemStateChanged(evt);
            }
        });
        Multiplicador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplicadorActionPerformed(evt);
            }
        });

        Tolerancia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "dorado","plateado", "sin color"}));
        Tolerancia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ToleranciaItemStateChanged(evt);
            }
        });
        Tolerancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToleranciaActionPerformed(evt);
            }
        });

        MasMenos.setText("     Â±");

        Return.setText("Return");
        Return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnActionPerformed(evt);
            }
        });

        Calcular.setText("Calcular");
        Calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularActionPerformed(evt);
            }
        });

        ReiniciarF.setText("Reiniciar");
        ReiniciarF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReiniciarFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Color1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Color2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Multiplicador, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Tolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ReiniciarF, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Return, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Calcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Casilla1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(MasMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(Casilla2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Resistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Resistencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Color1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Color2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Multiplicador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Return)
                    .addComponent(Calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReiniciarF))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MasMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Casilla2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Color1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Color1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Color1ActionPerformed

    private void ReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnActionPerformed
        Menu m= new Menu();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ReturnActionPerformed

    private void Color2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Color2ActionPerformed

    }//GEN-LAST:event_Color2ActionPerformed

    private void MultiplicadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplicadorActionPerformed
        
    }//GEN-LAST:event_MultiplicadorActionPerformed

    private void ToleranciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToleranciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ToleranciaActionPerformed

    private void Color2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Color2ItemStateChanged
        int op2= Color2.getSelectedIndex();
        switch(op2){
            case 1:
                c12 = 0;
                Color2.setBackground(java.awt.Color.BLACK);
                break;
            case 2:
                c12 = 1;
                Color2.setBackground(java.awt.Color.getHSBColor(12, 250, 100));
                break;
            case 3:
                c12 = 2;
                Color2.setBackground(java.awt.Color.RED);
                break;
            case 4:
                c12 = 3;
                Color2.setBackground(java.awt.Color.ORANGE);
                break;
            case 5:
                c12 = 4;
                Color2.setBackground(java.awt.Color.YELLOW);
                break;
            case 6:
                c12 = 5;
                Color2.setBackground(java.awt.Color.GREEN);
                break;
            case 7:
                c12 = 6;
                Color2.setBackground(java.awt.Color.BLUE);
                break;
            case 8:
                c12 = 7;
                Color2.setBackground(java.awt.Color.MAGENTA);
                break;
            case 9:
                c12 = 8;
                Color2.setBackground(java.awt.Color.GRAY);
                break;
            case 10:
                c12 = 9;
                Color2.setBackground(java.awt.Color.WHITE);
                break;
        }
        r = c11 *10;
        concatenar = r + c12;
        
    }//GEN-LAST:event_Color2ItemStateChanged

    private void Color1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Color1ItemStateChanged
        int op1= Color1.getSelectedIndex();
        switch(op1){
            case 1:
                c11 = 0;
                Color1.setBackground(java.awt.Color.BLACK);
                break;
            case 2:
                c11 = 1;
                Color1.setBackground(java.awt.Color.getHSBColor(12, 250, 100));
                break;
            case 3:
                c11 = 2;
                Color1.setBackground(java.awt.Color.RED);
                break;
            case 4:
                c11 = 3;
                Color1.setBackground(java.awt.Color.ORANGE);
                break;
            case 5:
                c11 = 4;
                Color1.setBackground(java.awt.Color.YELLOW);
                break;
            case 6:
                c11 = 5;
                Color1.setBackground(java.awt.Color.GREEN);
                break;
            case 7:
                c11 = 6;
                Color1.setBackground(java.awt.Color.BLUE);
                break;
            case 8:
                c11 = 7;
                Color1.setBackground(java.awt.Color.MAGENTA);
                break;
            case 9:
                c11 = 8;
                Color1.setBackground(java.awt.Color.GRAY);
                break;
            case 10:
                c11 = 9;
                Color1.setBackground(java.awt.Color.WHITE);
                break;
        }
    }//GEN-LAST:event_Color1ItemStateChanged

    private void ToleranciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ToleranciaItemStateChanged
        int op4 = Tolerancia.getSelectedIndex();
        switch(op4){
            case 1:
                c14 = 5/n;
                Tolerancia.setBackground(java.awt.Color.getHSBColor(30, 62, 89));
                break;
            case 2:
                c14 =10/n;
                Tolerancia.setBackground(java.awt.Color.DARK_GRAY);
                break;
            case 3:
                c14 =20/n;
                Tolerancia.setBackground(java.awt.Color.WHITE);
                break;

        }
    }//GEN-LAST:event_ToleranciaItemStateChanged

    private void MultiplicadorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_MultiplicadorItemStateChanged
        int op3 = Multiplicador.getSelectedIndex();
        
        switch (op3){
            case 1:
                c13 = 1;
                Multiplicador.setBackground(java.awt.Color.BLACK);
                break;
            case 2:
                c13 = 10;
                Multiplicador.setBackground(java.awt.Color.getHSBColor(12, 250, 100));
                break;
            case 3:
                c13 = 100;
                Multiplicador.setBackground(java.awt.Color.RED);
                break;
            case 4:
                c13 = 1000;
                Multiplicador.setBackground(java.awt.Color.ORANGE);
                break;
            case 5:
                c13 = 10000;
                Multiplicador.setBackground(java.awt.Color.YELLOW);
                break;
            case 6:
                c13 = 100000;
                Multiplicador.setBackground(java.awt.Color.GREEN);
                break;
            case 7:
                c13 = 1000000;
                Multiplicador.setBackground(java.awt.Color.BLUE);
                break;
            case 8:
                c13 = 10/n;
                Multiplicador.setBackground(java.awt.Color.getHSBColor(30, 62, 89));
                break;
            case 9:
                c13 = 1/n;
                Multiplicador.setBackground(java.awt.Color.DARK_GRAY);
                break;
        }
    }//GEN-LAST:event_MultiplicadorItemStateChanged

    private void ResistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResistenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResistenciaActionPerformed

    private void ReiniciarFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReiniciarFActionPerformed
        c11 =0;
        c12 =0;
        c13 =0;
        c14 =0;
        Color1.setSelectedIndex(0);
        Color2.setSelectedIndex(0);
        Multiplicador.setSelectedIndex(0);
        Tolerancia.setSelectedIndex(0);
        Casilla1.setText(" ");
        Casilla2.setText(" ");
        Color1.setBackground(java.awt.Color.WHITE);
        Color2.setBackground(java.awt.Color.WHITE);
        Multiplicador.setBackground(java.awt.Color.WHITE);
        Tolerancia.setBackground(java.awt.Color.WHITE);
    }//GEN-LAST:event_ReiniciarFActionPerformed

    private void CalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularActionPerformed
        resultado1 = concatenar*c13;
        if(resultado1 == 0 || c14 == 0){
            JOptionPane.showMessageDialog(this, "Error");
        }
        else if(resultado1 > 0 && resultado1 < 1000000000){
            resultado2 = c14 * 100;
            float auxresultado1 = (float)resultado1;
            float auxresultado2 = (float)resultado2;
            Casilla1.setText(auxresultado1 + "Î©");
            Casilla2.setText(auxresultado2 + "%");


        }
    }//GEN-LAST:event_CalcularActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUICResistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUICResistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUICResistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUICResistencias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUICResistencias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Calcular;
    private javax.swing.JLabel Casilla1;
    private javax.swing.JLabel Casilla2;
    private javax.swing.JComboBox<String> Color1;
    private javax.swing.JComboBox<String> Color2;
    private javax.swing.JLabel MasMenos;
    private javax.swing.JComboBox<String> Multiplicador;
    private javax.swing.JButton ReiniciarF;
    private javax.swing.JButton Resistencia;
    private javax.swing.JButton Return;
    private javax.swing.JComboBox<String> Tolerancia;
    // End of variables declaration//GEN-END:variables
}
